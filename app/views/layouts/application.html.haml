:ruby
  description = nil
  title = nil

  if resource.present?
    if resource.respond_to?(:seo_meta) && meta = resource.seo_meta
      description = meta.description
      title = meta.title
    end

    if resource.class.respond_to?(:seo_meta) && meta = resource.class.seo_meta
      description = meta.description if description.blank?
      title = meta.title if title.blank?
    end
  elsif meta = SeoMeta.for_resource_index(params[:controller].classify).first
    description = meta.description
    title = meta.title
  elsif meta = SeoMeta.for_static_action(params[:action]).first
    description = meta.description
    title = meta.title
  end

  if description.blank?
    description = content_for?(:description) ? yield(:description) : 'app_name'.t
  end

  if title.blank?
    title = content_for?(:title) ? yield(:title) : 'app_name'.t
  end

!!!
= cc_html lang: :fr, class: 'no-js' do
  %head
    %title= title

    %meta{content: "width=device-width, initial-scale=1.0, maximum-scale=2.0, minimum-scale=1.0, user-scalable=no", name: "viewport"}/
    %meta{charset: "utf-8"}/
    %meta{name: "description", content: "#{description}"}/
    = yield :meta
    = csrf_meta_tags

    = favicon_link_tag 'favicon.svg'
    = stylesheet_link_tag 'application', media: 'all'
    = yield :styles

    = javascript_include_tag 'application', 'data-turbolinks-track': true, 'data-turbolinks-eval': false, cache: true, defer: "defer"
    - if has_consent_cookie?
      = render_scripts
    = yield :scripts


  - body_class = "#{yield :extra_body_class} #{controller_path.gsub('/', ' ')} #{action_name}".strip
  %body{class: body_class}
    = render partial: 'shared/html_templates'

    %nav.navbar.navbar-expand-lg.navbar-light.bg-light{role: :navigation}
      .container
        .navbar-header
          %button.navbar-toggler{"data-target" => "#menu", "data-toggle" => "collapse", type: "button"}
            %span.sr-only Toggle navigation
            %i.fa.fa-navicon
          %a.navbar-brand{href: "/"}
            = icon :flag
            %span.text= 'app_name'.t

    .container
      - content_class = yield :extra_content_class
      #content{class: content_class}
        = yield :before_page

        - content_header_class = yield :content_header_class
        - content_header_style = yield :content_header_style
        #content-header.mt-3{class: content_header_class, style: content_header_style}
          %h1= content_for?(:page_title) ? yield(:page_title) : content_for?(:title) ? yield(:title) : 'app_name'.t
          = yield :content_header


        - if content_for?(:pills)
          = yield :pills

        - if content_for?(:breadcrumb)
          = yield :breadcrumb

        = yield :before_content

        = yield

        = yield :after_content
        = yield :after_page

    - if !has_consent_cookie?
      = render partial: 'shared/consent_banner'

  = yield :inline_scripts
